(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{417:function(e,a,_){"use strict";_.r(a);var v=_(56),r=Object(v.a)({},(function(){var e=this,a=e.$createElement,_=e._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"_9-网络用途的媒体流api扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-网络用途的媒体流api扩展"}},[e._v("#")]),e._v(" 9 网络用途的媒体流API扩展")]),e._v(" "),_("h2",{attrs:{id:"_9-1-简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-简介"}},[e._v("#")]),e._v(" 9.1 简介")]),e._v(" "),_("p",[_("code",[e._v("MediaStreamTrack")]),e._v("接口（如[GETUSERMEDIA]规范中所定义）通常表示音频或视频的数据流。可以在"),_("code",[e._v("MediaStream")]),e._v("中收集一个或多个"),_("code",[e._v("MediaStreamTracks")]),e._v("（严格来说，[GETUSERMEDIA]中定义的"),_("code",[e._v("MediaStream")]),e._v("可能包含零个或多个"),_("code",[e._v("MediaStreamTrack")]),e._v("对象）。")]),e._v(" "),_("p",[e._v("可以扩展"),_("code",[e._v("MediaStreamTrack")]),e._v("以表示来自或被发送到远程对等体（例如，不仅仅是本地相机）的媒体流。此部分将介绍在"),_("code",[e._v("MediaStreamTrack")]),e._v("对象上启用此功能所需的扩展。在[RTCWEB-RTP]，[RTCWEB-AUDIO]和[RTCWEB-TRANSPORT]中描述了如何将媒体传输到对等体。")]),e._v(" "),_("p",[e._v("发送给另一个对等方的"),_("code",[e._v("MediaStreamTrack")]),e._v("将作为一个且唯一一个MediaStreamTrack向收件人显示。对等体被定义为支持该规范的用户代理。此外，发送方应用程序可以指示"),_("code",[e._v("MediaStreamTrack")]),e._v("所属的"),_("code",[e._v("MediaStream")]),e._v("对象。接收端相应的"),_("code",[e._v("MediaStream")]),e._v("对象将会被创建(如果不是已经存在)并且对应补充。")]),e._v(" "),_("p",[e._v("正如本文档之前所述，应用程序可以使用对象"),_("code",[e._v("RTCRtpSender")]),e._v("和"),_("code",[e._v("RTCRtpReceiver")]),e._v("来对"),_("code",[e._v("MediaStreamTracks")]),e._v("的传输和接收进行更细粒度的控制。")]),e._v(" "),_("p",[e._v("通道是"),_("code",[e._v("MediaStream")]),e._v("规范中考虑的最小单位。信道旨在被编码在一起以便传输，例如，RTP有效载荷类型。编解码器需要联合编码的所有通道必须位于同一个"),_("code",[e._v("MediaStreamTrack")]),e._v("中，编解码器应该能够编码或丢弃轨道中的所有通道。")]),e._v(" "),_("p",[e._v("对于给定"),_("code",[e._v("MediaStreamTrack")]),e._v("的输入和输出的概念也适用于通过网络传输的"),_("code",[e._v("MediaStreamTrack")]),e._v("对象。由"),_("code",[e._v("RTCPeerConnection")]),e._v("对象创建的MediaStreamTrack（如本文档前面所述）将把从远程对等方接收的数据作为输入。类似地，来自本地源的"),_("code",[e._v("MediaStreamTrack")]),e._v("（例如通过[GETUSERMEDIA]的摄像机）将具有输出，如果该对象与RTCPeerConnection对象一起使用,该输出表示传输到远程对等端的内容。")]),e._v(" "),_("p",[e._v("[GETUSERMEDIA]中描述的复制"),_("code",[e._v("MediaStream")]),e._v("和"),_("code",[e._v("MediaStreamTrack")]),e._v("对象的概念也适用于此处。例如，该功能可用于视频会议场景中，以便在本地监视器中显示来自用户摄像头和麦克风的本地视频，同时仅将音频发送到远程对等端（例如，响应用户使用“视频静音“功能”。在某些情况下，将不同的"),_("code",[e._v("MediaStreamTrack")]),e._v("对象组合到新的"),_("code",[e._v("MediaStream")]),e._v("对象中非常有用。")]),e._v(" "),_("blockquote",[_("p",[e._v("NOTE:在本文档中，我们仅指定与"),_("code",[e._v("RTCPeerConnection")]),e._v("一起使用时相关的以下对象的各个方面。有关使用"),_("code",[e._v("MediaStream")]),e._v("和"),_("code",[e._v("MediaStreamTrack")]),e._v("的一般信息，请参阅[GETUSERMEDIA]文档中对象的原始定义。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);