(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{432:function(t,e,a){"use strict";a.r(e);var s=a(56),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_7-1-rtcrtpsender接口扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-rtcrtpsender接口扩展"}},[t._v("#")]),t._v(" 7.1 RTCRtpSender接口扩展")]),t._v(" "),a("p",[t._v("点对点DTMF API对"),a("code",[t._v("RTCRtpSender")]),t._v("接口的扩展如下。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("partial "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RTCRtpSender")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    readonly        attribute "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RTCDTMFSender")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" dtmf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("属性")])]),t._v(" "),a("p",[t._v("RTCDTMFSender类型的dtmf,只读的，可以为null：当获取时，dtmf属性返回[Dtmf]内部插槽的值，它代表一个可用来发送DTMF的"),a("code",[t._v("RTCDTMFSender")]),t._v(",如果未设置，则为null。当RTCRtpSender的[SenderTrack]为“audio”，[Dtmf]内部插槽被设置。")])])}),[],!1,null,null,null);e.default=n.exports}}]);