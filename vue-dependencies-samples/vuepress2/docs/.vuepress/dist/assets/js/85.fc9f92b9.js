(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{462:function(e,v,_){"use strict";_.r(v);var r=_(56),c=Object(r.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"_5-4-rtcrtptransceiver-接口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-rtcrtptransceiver-接口"}},[e._v("#")]),e._v(" "),_("a",{attrs:{href:"http://w3c.github.io/webrtc-pc/#rtcrtptransceiver-interface",target:"_blank",rel:"noopener noreferrer"}},[e._v("5.4 RTCRtpTransceiver 接口"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("code",[e._v("RTCRtpTransceiver")]),e._v("接口表示共享公共mid的"),_("code",[e._v("RTCRtpSender")]),e._v("和"),_("code",[e._v("RTCRtpReceiver")]),e._v("的组合。如[JSEP]（第3.4.1节）中所定义的，如果"),_("code",[e._v("RTCRtpTransceiver")]),e._v("的 "),_("code",[e._v("mid")]),e._v(" 属性为非"),_("code",[e._v("null")]),e._v("，则称其与媒体描述相关联;否则据说是不相关的。从概念上讲，相关联的收发器是在最后应用的会话描述中表示的收发器。\n"),_("code",[e._v("RTCRtpTransceiver")]),e._v("的收发器类型由关联的"),_("code",[e._v("RTCRtpReceiver")]),e._v("的"),_("code",[e._v("MediaStreamTrack")]),e._v("对象的类型定义。\n要使用"),_("code",[e._v("RTCRtpReceiver")]),e._v("对象，接收方，"),_("code",[e._v("RTCRtpSender")]),e._v("对象，发送方和"),_("code",[e._v("RTCRtpTransceiverDirection")]),e._v("值，方向创建"),_("code",[e._v("RTCRtpTransceiver")]),e._v("，请运行以下步骤：")]),e._v(" "),_("ol",[_("li",[e._v("让收发器成为新的"),_("code",[e._v("RTCRtpTransceiver")]),e._v("对象。")]),e._v(" "),_("li",[e._v("让收发器有一个[[Sender]]内部插槽，初始化为发送方。")]),e._v(" "),_("li",[e._v("让收发器有一个[[Receiver]]内部插槽，初始化为接收器。")]),e._v(" "),_("li",[e._v("让收发器有一个[[Stopped]]内部插槽，初始化为"),_("code",[e._v("false")]),e._v("。")]),e._v(" "),_("li",[e._v("让收发器有一个[[Direction]]内部插槽，初始化为方向。")]),e._v(" "),_("li",[e._v("让收发器有一个[[Receptive]]内部插槽，初始化为"),_("code",[e._v("false")]),e._v("。")]),e._v(" "),_("li",[e._v("让收发器具有[[CurrentDirection]]内部插槽，初始化为"),_("code",[e._v("null")]),e._v("。")]),e._v(" "),_("li",[e._v("让收发器有一个[[FiredDirection]]内部插槽，初始化为"),_("code",[e._v("null")]),e._v("。")]),e._v(" "),_("li",[e._v("让收发器具有[[PreferredCodecs]]内部插槽，初始化为空列表。")]),e._v(" "),_("li",[e._v("返回收发器。")])]),e._v(" "),_("blockquote",[_("p",[e._v("NOTE")]),e._v(" "),_("p",[e._v("创建收发器不会创建基于"),_("code",[e._v("RTCDtlsTransport")]),e._v("和"),_("code",[e._v("RTCIceTransport")]),e._v("的对象。这只会在设置"),_("code",[e._v("RTCSessionDescription")]),e._v("的过程中发生。")])]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("[Exposed=Window] interface RTCRtpTransceiver {\n    readonly        attribute DOMString?                  mid;\n    [SameObject]\n    readonly        attribute RTCRtpSender                sender;\n    [SameObject]\n    readonly        attribute RTCRtpReceiver              receiver;\n    readonly        attribute boolean                     stopped;\n                    attribute RTCRtpTransceiverDirection  direction;\n    readonly        attribute RTCRtpTransceiverDirection? currentDirection;\n    void stop ();\n    void setCodecPreferences (sequence<RTCRtpCodecCapability> codecs);\n};\n\n")])])]),_("p",[_("strong",[e._v("属性")])]),e._v(" "),_("p",[_("em",[e._v("mid")]),e._v(" DOMString类型，只读，可以为空\n"),_("code",[e._v("mid")]),e._v("属性是中间协商的，并且存在于[JSEP]（第 5.2.1 节和第 5.3.1 节）中定义的本地和远程描述中。在协商完成之前，中间值可能为空。回滚后，该值可能会从非"),_("code",[e._v("null")]),e._v("值更改为"),_("code",[e._v("null")]),e._v("。")]),e._v(" "),_("p",[_("em",[e._v("sender")]),e._v(" RTCRtpSender类型，只读\n"),_("code",[e._v("sender")]),e._v("属性公开了可能以"),_("code",[e._v("mid = mid")]),e._v("发送的 RTP 媒体相对应的"),_("code",[e._v("RTCRtpSender")]),e._v("。获取时，属性必须返回[[Sender]]槽的值。")]),e._v(" "),_("p",[_("em",[e._v("receiver")]),e._v(" RTCRtpReceiver类型，只读\n接收器属性是对应于可以用"),_("code",[e._v("mid = mid")]),e._v("接收的RTP媒体的"),_("code",[e._v("RTCRtpReceiver")]),e._v("。获取属性时必须返回[[Receiver]]插槽的值。")]),e._v(" "),_("p",[_("em",[e._v("stopped")]),e._v(" 类型boolean，只读\n"),_("code",[e._v("stopped")]),e._v("属性表示此收发器的发送方将不再发送，接收方将不再接收。如果已调用"),_("code",[e._v("stop")]),e._v("或设置本地或远程描述导致"),_("code",[e._v("RTCRtpTransceiver")]),e._v("停止，则为"),_("code",[e._v("true")]),e._v("。获取时，此属性必须返回[[Stopped]]插槽的值。")]),e._v(" "),_("p",[_("em",[e._v("direction")]),e._v(" RTCRtpTransceiverDirection类型\n如[JSEP]（第 4.2.4 节）中所定义，"),_("code",[e._v("direction")]),e._v("属性指示此收发器的首选方向，该方向将用于调用"),_("code",[e._v("createOffer和createAnswer")]),e._v("。方向性更新不会立即生效。相反，将来调用"),_("code",[e._v("createOffer")]),e._v("和"),_("code",[e._v("createAnswer")]),e._v("会将相应的媒体描述标记为"),_("code",[e._v("sendSearchv")]),e._v("，"),_("code",[e._v("sendonly")]),e._v("，"),_("code",[e._v("recvonly")]),e._v("或"),_("code",[e._v("inactive")]),e._v("，如[JSEP]中所定义（第 5.2.2 节和第 5.3.2 节）。\n获取时，此属性必须返回[[Direction]]插槽的值。\n在设置时，用户代理必须执行以下步骤：")]),e._v(" "),_("ol",[_("li",[e._v("让收发器成为调用设置者的"),_("code",[e._v("RTCRtpTransceiver")]),e._v("对象。")]),e._v(" "),_("li",[e._v("让连接成为与收发器关联的"),_("code",[e._v("RTCPeerConnection")]),e._v("对象。")]),e._v(" "),_("li",[e._v("如果连接的[[IsClosed]]槽为"),_("code",[e._v("true")]),e._v("，则抛出"),_("code",[e._v("InvalidStateError")]),e._v("。")]),e._v(" "),_("li",[e._v("如果收发器的[[Stopped]]插槽为"),_("code",[e._v("true")]),e._v("，则抛出"),_("code",[e._v("InvalidStateError")]),e._v("。")]),e._v(" "),_("li",[e._v("让"),_("code",[e._v("newDirection")]),e._v("成为设置者的参数。")]),e._v(" "),_("li",[e._v("如果"),_("code",[e._v("newDirection")]),e._v("等于收发器的[[Direction]]插槽，则中止这些步骤。")]),e._v(" "),_("li",[e._v("将收发器的[[Direction]]插槽设置为"),_("code",[e._v("newDirection")]),e._v("。")]),e._v(" "),_("li",[e._v("更新连接所需的协商标志。")])]),e._v(" "),_("p",[_("em",[e._v("currentDirection")]),e._v(" 类型为RTCRtpTransceiverDirection，只读，可为空\n如[JSEP]（第4.2.5节）中所定义，"),_("code",[e._v("currentDirection")]),e._v("属性指示为此收发器协商的当前方向。 "),_("code",[e._v("currentDirection")]),e._v("的值独立于"),_("code",[e._v("RTCRtpEncodingParameters.active")]),e._v("的值，因为无法从另一个推导出。如果此收发器从未在提供/应答交换中表示，或者收发器已停止，则该值为空。获取时，该属性必须返回[[CurrentDirection]]槽的值。")]),e._v(" "),_("p",[_("strong",[e._v("方法")])]),e._v(" "),_("p",[_("code",[e._v("stop")]),e._v("\n不可逆转地停止"),_("code",[e._v("RTCRtpTransceiver")]),e._v("。此收发器的发送器将不再发送，接收器将不再接收。调用"),_("code",[e._v("stop（）")]),e._v("会更新"),_("code",[e._v("RTCRtpTransceiver")]),e._v("关联的RTCPeerConnection的需要协商标志。\n停止收发器将导致将来调用"),_("code",[e._v("createOffer")]),e._v("或"),_("code",[e._v("createAnswer")]),e._v("以在相应收发器的媒体描述中生成零端口，如[JSEP]（第 4.2.1 节）中所定义。")]),e._v(" "),_("blockquote",[_("p",[e._v("NOTE")]),e._v(" "),_("p",[e._v("如果在应用远程报价和创建答案之间调用此方法，并且收发器与[BUNDLE]中定义的“提供者标记”媒体描述相关联，则这将导致捆绑组中的所有其他收发器停止为好。为避免这种情况，当"),_("code",[e._v("signalingState")]),e._v("为“稳定”并执行后续的提议/应答交换时，可以只停止当前收发器。")])]),e._v(" "),_("p",[e._v("当调用stop方法时，用户代理必须运行以下步骤：")]),e._v(" "),_("ol",[_("li",[e._v("让收发器成为调用该方法的"),_("code",[e._v("RTCRtpTransceiver")]),e._v("对象。")]),e._v(" "),_("li",[e._v("让连接成为与收发器关联的"),_("code",[e._v("RTCPeerConnection")]),e._v("对象。")]),e._v(" "),_("li",[e._v("如果连接的[[IsClosed]]槽为"),_("code",[e._v("true")]),e._v("，则抛出"),_("code",[e._v("InvalidStateError")]),e._v("。")]),e._v(" "),_("li",[e._v("如果收发器的[[已停止]]插槽为"),_("code",[e._v("true")]),e._v("，则中止这些步骤。")]),e._v(" "),_("li",[e._v("停止收发器指定的"),_("code",[e._v("RTCRtpTransceiver")]),e._v("。")]),e._v(" "),_("li",[e._v("更新连接所需的协商标志。")])]),e._v(" "),_("p",[e._v("给定收发器的"),_("code",[e._v("RTCRtpTransceiver")]),e._v("停止算法如下：")]),e._v(" "),_("ol",[_("li",[e._v("让发送者成为收发器的[[发件人]]。")]),e._v(" "),_("li",[e._v("让接收器成为收发器的[[接收器]]。")]),e._v(" "),_("li",[e._v("停止向发件人发送媒体。")]),e._v(" "),_("li",[e._v("按照[RFC3550]中的规定，为发送方发送的每个 RTP 流发送 RTCP BYE。")]),e._v(" "),_("li",[e._v("停止使用接收器接收媒体。")]),e._v(" "),_("li",[e._v("执行接收方[[ReceiverTrack]]的结束步骤。")]),e._v(" "),_("li",[e._v("将收发器的[[Stopped]]插槽设置为"),_("code",[e._v("true")]),e._v("。")]),e._v(" "),_("li",[e._v("将收发器的[[Receptive]]插槽设置为"),_("code",[e._v("false")]),e._v("。")]),e._v(" "),_("li",[e._v("将收发器的[[CurrentDirection]]插槽设置为空。")])]),e._v(" "),_("p",[_("code",[e._v("setCodecPreferences")]),e._v(" "),_("code",[e._v("setCodecPreferences")]),e._v("方法会覆盖用户代理使用的默认编解码器首选项。当使用"),_("code",[e._v("createOffer")]),e._v("或"),_("code",[e._v("createAnswer")]),e._v("生成会话描述时，用户代理必须按照编解码参数中指定的顺序使用指示的编解码器，用于与此"),_("code",[e._v("RTCRtpTransceiver")]),e._v("对应的媒体部分。\n此方法允许应用程序禁用特定编解码器的协商。它还允许应用程序使远程对等方优先选择列表中首先出现的编解码器。\n对于包含此"),_("code",[e._v("RTCRtpTransceiver")]),e._v("的"),_("code",[e._v("createOffer")]),e._v("和"),_("code",[e._v("createAnswer")]),e._v("的所有调用，编解码器首选项仍然有效，直到再次调用此方法。将编解码器设置为空序列会将编解码器首选项重置为任何默认值。\n传递给"),_("code",[e._v("setCodecPreferences")]),e._v("的编解码器序列只能包含由"),_("code",[e._v("RTCRtpSender.getCapabilities（kind）")]),e._v("或"),_("code",[e._v("RTCRtpReceiver.getCapabilities（kind）")]),e._v("返回的编解码器，其中"),_("code",[e._v("kind")]),e._v("是调用该方法的"),_("code",[e._v("RTCRtpTransceiver")]),e._v("的类型。此外，不能修改"),_("code",[e._v("RTCRtpCodecCapability")]),e._v("字典成员。如果编解码器不满足这些要求，则用户代理必须抛出"),_("code",[e._v("InvalidAccessError")]),e._v("。")]),e._v(" "),_("blockquote",[_("p",[e._v("NOTE")]),e._v(" "),_("p",[e._v("由于[SDP]中的建议，对"),_("code",[e._v("createAnswer")]),e._v("的调用应该只使用编解码器首选项的公共子集和商品中出现的编解码器。例如，如果编解码器首选项是“C，B，A”，但仅提供编解码器“A，B”，则答案应仅包含编解码器“B，A”。但是，[JSEP]（第 5.3.1 节）允许添加不在商品中的编解码器，因此实现的行为可能不同。")])]),e._v(" "),_("p",[e._v("当调用"),_("code",[e._v("setCodecPreferences（）")]),e._v("时，用户代理必须运行以下步骤：")]),e._v(" "),_("ol",[_("li",[e._v("让收发器成为调用此方法的"),_("code",[e._v("RTCRtpTransceiver")]),e._v("对象。")]),e._v(" "),_("li",[e._v("让编解码器成为第一个参数。")]),e._v(" "),_("li",[e._v("如果编解码器是空列表，请将收发器的[[PreferredCodecs]]插槽设置为编解码器并中止这些步骤。")]),e._v(" "),_("li",[e._v("删除编解码器中的任何重复值。从列表的后面开始，以保持编解码器的优先级;列表中第一次出现编解码器的索引在此步骤之前和之后是相同的。")]),e._v(" "),_("li",[e._v("让我们成为收发器的收发器类型。")]),e._v(" "),_("li",[e._v("如果编解码器和"),_("code",[e._v("RTCRtpSender.getCapabilities（kind）.codecs")]),e._v("之间的交集或编解码器与"),_("code",[e._v("RTCRtpReceiver.getCapabilities（kind）.codecs")]),e._v("之间的交集是一个空集，则抛出"),_("code",[e._v("InvalidModificationError")]),e._v("。这确保了无论收发器方向如何，我们总能提供一些东西。")]),e._v(" "),_("li",[e._v("让"),_("code",[e._v("codecCapabilities")]),e._v("成为"),_("code",[e._v("RTCRtpSender.getCapabilities（kind）.codecs")]),e._v("和"),_("code",[e._v("RTCRtpReceiver.getCapabilities（kind）.codecs")]),e._v("的联合。")]),e._v(" "),_("li",[e._v("对于编解码器中的每个编解码器，\n"),_("ol",[_("li",[e._v("如果编解码器不在"),_("code",[e._v("codecCapabilities")]),e._v("中，则抛出"),_("code",[e._v("InvalidModificationError")]),e._v("。")])])]),e._v(" "),_("li",[e._v("将收发器的[[PreferredCodecs]]插槽设置为编解码器。")])])])}),[],!1,null,null,null);v.default=c.exports}}]);