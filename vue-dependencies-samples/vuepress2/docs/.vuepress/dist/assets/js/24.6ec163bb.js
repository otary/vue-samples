(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{520:function(e,t,n){"use strict";n.r(t);var r=n(56),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"_4-2-2-rtcicecredentialtype-enum"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-rtcicecredentialtype-enum"}},[e._v("#")]),e._v(" "),n("a",{attrs:{href:"http://w3c.github.io/webrtc-pc/#rtcicecredentialtype-enum",target:"_blank",rel:"noopener noreferrer"}},[e._v("4.2.2 RTCIceCredentialType Enum"),n("OutboundLink")],1)]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('enum RTCIceCredentialType {\n  "password",\n  "oauth"\n};\n')])])]),n("table",[n("tr",[n("td",{attrs:{colspan:"2"}},[e._v(" Enumeration description")])]),e._v(" "),n("tr",[n("td",[e._v("password")]),e._v(" "),n("td",[e._v("The credential is a long-term authentication username and password, as described in [RFC5389], Section 10.2.")])]),e._v(" "),n("tr",[n("td",[e._v(" oauth")]),e._v(" "),n("td",[n("p",[e._v("基于OAuth 2.0的身份验证方法，如[RFC7635]中所述。\n"),n("br"),e._v(" "),n("br"),e._v("\n对于OAuth身份验证，ICE代理需要三个凭据信息。凭证由用于 kid，macKey 和 accessToken 组成。其中kid用于 RTCIceServer 成员变量，macKey 和 accessToken放置在RTCOAuthCredential字典中的。\n"),n("br"),e._v(" "),n("br"),e._v("\n此规范未定义应用程序（充当OAuth客户端）如何从授权服务器获取accessToken，kid和macKey，因为WebRTC仅处理ICE代理和TURN服务器之间的交互。例如，应用程序可以使用OAuth 2.0 Implicit Grant类型和PoP（Proof-of-Possession）令牌类型，如[RFC6749]和[OAUTH-POP-KEY-DISTRIBUTION]中所述; [RFC7635]附录B中提供了这方面的一个例子。\n"),n("br"),e._v(" "),n("br"),e._v("\nNOTE：作为OAuth客户端的应用程序负责在accessToken到期之前刷新凭据信息并使用新的凭据更新ICE代理。 OAuth客户端可以使用 RTCPeerConnection 的 setConfiguration 方法定期刷新 TURN 凭据。\n"),n("br"),e._v(" "),n("br"),e._v("\nHMAC密钥的长度（RTCOAuthCredential.macKey）可以是大于 20（160位）的任何整数字节数。\n"),n("br"),e._v(" "),n("br"),e._v("\nNOTE：根据[RFC7635]第 4.1 节，HMAC密钥必须是对称密钥，因为非对称密钥会导致大的访问令牌，这可能不适合单个 STUN 消息。\n"),n("br"),e._v(" "),n("br"),e._v("\nNOTE：目前，STUN / TURN 协议仅使用SHA-1和SHA-2系列哈希算法进行消息完整性保护，如[RFC5389]第15.4节和[STUN-BIS]第14.6节中所定义。\n")])])])]),n("p")])}),[],!1,null,null,null);t.default=a.exports}}]);