(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{447:function(e,t,a){"use strict";a.r(t);var n=a(56),v=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"_5-6-rtcicetransport接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-rtcicetransport接口"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"http://w3c.github.io/webrtc-pc/#rtcicetransport",target:"_blank",rel:"noopener noreferrer"}},[e._v("5.6 "),a("code",[e._v("RTCIceTransport")]),e._v("接口"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("RTCIceTransport")]),e._v("接口允许应用程序获取有关用来发送接收数据包的ICE传输的信息。特别的，ICE管理对等连接，它牵涉到应用程序可能获取的状态。由于需要调用"),a("code",[e._v("setLocalDescription()")]),e._v("和"),a("code",[e._v("setRemoteDescription()")]),e._v(","),a("code",[e._v("RTCIceTransport")]),e._v("对象被创建。底层ICE状态由ICE代理管理，所以当ICE代理向用户代理提供指示时，"),a("code",[e._v("RTCIceTransport")]),e._v("的状态就会改变。每个"),a("code",[e._v("RTCIceTransport")]),e._v("对象代表一个特定"),a("code",[e._v("RTCRtpTransceiver")]),e._v("的RTP或RTCP组件的ICE传输层，或者是一组已经通过[BUNDLE]协商的"),a("code",[e._v("RTCRtpTransceiver")]),e._v("。")]),e._v(" "),a("blockquote",[a("p",[e._v("NOTE:现存"),a("code",[e._v("RTCRtpTranceiver")]),e._v("的ICE重启将会由现存"),a("code",[e._v("RTCIceTransport")]),e._v("对象表示，它的状态将会被对应更新，而不是由新对象表示。")])]),e._v(" "),a("p",[e._v("当ICE代理表示它将为一个"),a("code",[e._v("RTCIceTransport")]),e._v("收集一系列的候选者时，用户代理必须对运行以下步骤的任务进行排序:")]),e._v(" "),a("ol",[a("li",[e._v("让connection成为与这个ICE代理关联的"),a("code",[e._v("RTCPeerConnection")]),e._v("对象。")]),e._v(" "),a("li",[e._v("如果connection的[[IsClosed]]插槽为"),a("code",[e._v("true")]),e._v("，中断这些步骤。")]),e._v(" "),a("li",[e._v("让transport成为RTCIceTransport。")]),e._v(" "),a("li",[e._v("设置transport的[[IceGathererState]]插槽为"),a("code",[e._v("gathering")]),e._v("。")]),e._v(" "),a("li",[e._v("在transport发起一个名为"),a("code",[e._v("gatheringstatechange")]),e._v("的事件。")]),e._v(" "),a("li",[e._v("更新connection的ICE收集状态。")])]),e._v(" "),a("p",[e._v("当ICE代理表示它已经成功收集了一个"),a("code",[e._v("RTCIceTransport")]),e._v("的一系列候选者时，用户代理必须对运行以下步骤的任务进行排序：")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("让connection成为与ICE代理关联的"),a("code",[e._v("RTCPeerConnection")]),e._v("对象。")])]),e._v(" "),a("li",[a("p",[e._v("如果connection的[[IsClosed]]插槽为"),a("code",[e._v("true")]),e._v("，中断这些步骤。")])]),e._v(" "),a("li",[a("p",[e._v("让transport成为"),a("code",[e._v("RTCIceTransport")]),e._v("。")])]),e._v(" "),a("li",[a("p",[e._v("让"),a("code",[e._v("newCandidate")]),e._v("成为创建一个RTCIceCandidate的结果，伴随一个新字典，它的"),a("code",[e._v("sdpMid")]),e._v("和"),a("code",[e._v("sdpMLineIndex")]),e._v("都被设置为与此"),a("code",[e._v("RTCIceTransport")]),e._v("相关联的值，"),a("code",[e._v("usernameFrangment")]),e._v("被设置为收集完成的candidates的用户名片段，"),a("code",[e._v("candidate")]),e._v("被设置为空字符串。")])]),e._v(" "),a("li",[a("p",[e._v("使用"),a("code",[e._v("RTCPeerConnectionIceEvent")]),e._v("接口发起一个名为"),a("code",[e._v("icecandidate")]),e._v("的事件，并且candidate属性在connection被设置为"),a("code",[e._v("newCandidate")]),e._v("。")])]),e._v(" "),a("li",[a("p",[e._v("如果另一代candidates还在被收集，中断这些步骤。")]),e._v(" "),a("blockquote",[a("p",[e._v("NOTE:这可能会出现，如果在ICE代理还在收集上一代的candidates时，开始ICE重启，可能会发生这种情况。")])])]),e._v(" "),a("li",[a("p",[e._v("设置transport的[[IceGathererState]]插槽为complete。")])]),e._v(" "),a("li",[a("p",[e._v("在transport发起一个名为"),a("code",[e._v("gatheringstatechange")]),e._v("的事件。")])]),e._v(" "),a("li",[a("p",[e._v("更新connection的ICE收集状态。")])])]),e._v(" "),a("p",[e._v("当用户代理表示新的ICE candidate可用于"),a("code",[e._v("RTCIceTransport")]),e._v("，或者从ICE候选者池中选择一个，或者从头开始收集它，用户代理必须对运行以下步骤的任务进行排序：")]),e._v(" "),a("ol",[a("li",[e._v("让"),a("code",[e._v("candidate")]),e._v("成为可用的ICE候选者。")]),e._v(" "),a("li",[e._v("让connection成为与这个ICE代理相关联的"),a("code",[e._v("RTCPeerConnection")]),e._v("对象。")]),e._v(" "),a("li",[e._v("如果connection的[[IsClosed]]插槽为"),a("code",[e._v("true")]),e._v("，中断这些步骤。")]),e._v(" "),a("li",[e._v("让transport成为可供候选者使用的"),a("code",[e._v("RTCIceTransport")]),e._v("。")]),e._v(" "),a("li",[e._v("如果connection.[[PendingLocalDescription]]不是"),a("code",[e._v("null")]),e._v("，并且表示收集候选者的ICE generation，向connection.[[PendingLocalDesciption]].sdp中添加候选者。")]),e._v(" "),a("li",[e._v("如果connection.[[CurrentLocalDescription]]不是"),a("code",[e._v("null")]),e._v("，并且表示收集候选者的ICE generation，向connection.[[CurrentLocalDescription]].sdp中添加候选者。")]),e._v(" "),a("li",[e._v("让"),a("code",[e._v("newCandidate")]),e._v("成为创建一个RTCIceCandidate的结果，伴随一个新字典，它的"),a("code",[e._v("sdpMid")]),e._v("和"),a("code",[e._v("sdpMLineIndex")]),e._v("都被设置为与此"),a("code",[e._v("RTCIceTransport")]),e._v("相关联的值，"),a("code",[e._v("usernameFrangment")]),e._v("被设置为候选者的用户名片段，并且"),a("code",[e._v("candidate")]),e._v("被设置为使用"),a("code",[e._v("candidate-attribute")]),e._v("语法编码的字符串来代表"),a("code",[e._v("candidate")]),e._v("。")]),e._v(" "),a("li",[e._v("将"),a("code",[e._v("newCandidate")]),e._v("添加到transport的本地候选者集合中。")]),e._v(" "),a("li",[e._v("使用"),a("code",[e._v("RTCPeerConnectionIceEvent")]),e._v("接口发起一个名为"),a("code",[e._v("icecandidate")]),e._v("的事件，并且候选者属性在"),a("code",[e._v("connection")]),e._v("被设置为"),a("code",[e._v("newCandidate")]),e._v("。")])]),e._v(" "),a("p",[e._v("当ICE代理表示"),a("code",[e._v("RTCIceTransport")]),e._v("的"),a("code",[e._v("RTCIceTransportState")]),e._v("已经改变时，用户代理必须对运行以下步骤的任务进行排序:")]),e._v(" "),a("ol",[a("li",[e._v("让"),a("code",[e._v("connection")]),e._v("成为与这个ICE代理相关联的"),a("code",[e._v("RTCPeerConnection")]),e._v("对象。")]),e._v(" "),a("li",[e._v("如果"),a("code",[e._v("connection")]),e._v("的[[IsClosed]]插槽为"),a("code",[e._v("true")]),e._v("，中断这些步骤。")]),e._v(" "),a("li",[e._v("让"),a("code",[e._v("transport")]),e._v("成为状态正在改变的"),a("code",[e._v("RTCIceTransport")]),e._v("。")]),e._v(" "),a("li",[e._v("让"),a("code",[e._v("newState")]),e._v("成为新的被指示的"),a("code",[e._v("RTCIceTransportState")]),e._v("。")]),e._v(" "),a("li",[e._v("设置"),a("code",[e._v("transport")]),e._v("的[[IceTransportState]]插槽为"),a("code",[e._v("newState")]),e._v("。")]),e._v(" "),a("li",[e._v("在"),a("code",[e._v("transport")]),e._v("发起一个名为"),a("code",[e._v("statechange")]),e._v("的事件。")]),e._v(" "),a("li",[e._v("更新"),a("code",[e._v("connection")]),e._v("的ICE连接状态。")]),e._v(" "),a("li",[e._v("更新"),a("code",[e._v("connection")]),e._v("的连接状态。")])]),e._v(" "),a("p",[e._v("当ICE代理表示选定的一对"),a("code",[e._v("RTCIceTransport")]),e._v("候选者已经改变时，用户代理必须对运行以下步骤的任务进行排序：")]),e._v(" "),a("ol",[a("li",[e._v("让"),a("code",[e._v("connection")]),e._v("成为与这个ICE代理相关联的"),a("code",[e._v("RTCPeerConnection")]),e._v("对象。")]),e._v(" "),a("li",[e._v("如果"),a("code",[e._v("connection")]),e._v("的[[IsClosed]]插槽为"),a("code",[e._v("true")]),e._v("，中断这些步骤。")]),e._v(" "),a("li",[e._v("让"),a("code",[e._v("transport")]),e._v("成为选定候选者对正在改变的"),a("code",[e._v("RTCIceTransport")]),e._v("。")]),e._v(" "),a("li",[e._v("让"),a("code",[e._v("newCandidatePair")]),e._v("成为新常见的"),a("code",[e._v("RTCIceCandidatePair")]),e._v("，如果选定了一个，表示选择正确，否则为null。")]),e._v(" "),a("li",[e._v("设置"),a("code",[e._v("transport")]),e._v("的[[SelectedCandidatePair]]插槽为"),a("code",[e._v("newCandidatePair")]),e._v("。")]),e._v(" "),a("li",[e._v("在"),a("code",[e._v("transport")]),e._v("发起一个名为"),a("code",[e._v("selectedcandidatepairchange")]),e._v("的事件。")])]),e._v(" "),a("p",[e._v("一个"),a("code",[e._v("RTCIceTransport")]),e._v("对象具有下列内部插槽：")]),e._v(" "),a("ul",[a("li",[e._v("[[IceTransportState]]初始化为"),a("code",[e._v("new")])]),e._v(" "),a("li",[e._v("[[IceGathererState]]初始化为"),a("code",[e._v("new")])]),e._v(" "),a("li",[e._v("[[SelectedCandidatePair]]初始化为"),a("code",[e._v("null")])])]),e._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Exposed")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Window")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("interface")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceTransport")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("EventTarget")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    readonly        attribute "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceRole")]),e._v("           role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    readonly        attribute "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceComponent")]),e._v("      component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    readonly        attribute "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceTransportState")]),e._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    readonly        attribute "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceGathererState")]),e._v(" gatheringState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    sequence"),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceCandidate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v(" getLocalCandidates "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    sequence"),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceCandidate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v(" getRemoteCandidates "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceCandidatePair")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),e._v("      getSelectedCandidatePair "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceParameters")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),e._v("         getLocalParameters "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RTCIceParameters")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),e._v("         getRemoteParameters "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n                    attribute "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("EventHandler")]),e._v("         onstatechange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n                    attribute "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("EventHandler")]),e._v("         ongatheringstatechange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n                    attribute "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("EventHandler")]),e._v("         onselectedcandidatepairchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[a("strong",[e._v("属性")])]),e._v(" "),a("p",[a("code",[e._v("RTCIceRole")]),e._v("类型的"),a("code",[e._v("role")]),e._v("，只读："),a("code",[e._v("role")]),e._v("属性必须返回transport的ICE role。")]),e._v(" "),a("p",[a("code",[e._v("RTCIceComponent")]),e._v("类型的"),a("code",[e._v("component")]),e._v("，只读："),a("code",[e._v("component")]),e._v("属性必须返回"),a("code",[e._v("transport")]),e._v("的ICE组件。当RTCP mux被使用时，单一的"),a("code",[e._v("RTCIceTransport")]),e._v("同时传输RTP和RTCP，并且"),a("code",[e._v("component")]),e._v("被设置为"),a("code",[e._v("RTP")]),e._v("。")]),e._v(" "),a("p",[a("code",[e._v("RTCIceTransportState")]),e._v("类型的"),a("code",[e._v("state")]),e._v("，只读：当需要获得"),a("code",[e._v("state")]),e._v("属性时，它必须返回[[IceTransportState]]插槽的值。")]),e._v(" "),a("p",[a("code",[e._v("RTCIceGathererState")]),e._v("类型的"),a("code",[e._v("gatheringState")]),e._v("，只读：当获取"),a("code",[e._v("gathering state")]),e._v("属性时，它必须返回[[IceGathererState]]插槽的值。")]),e._v(" "),a("p",[a("code",[e._v("EventHandler")]),e._v("类型的"),a("code",[e._v("onstatechange")]),e._v(":此event handler，当"),a("code",[e._v("RTCIceTransportstate")]),e._v("类型改变时，必须启动。")]),e._v(" "),a("p",[a("code",[e._v("EventHandler")]),e._v("类型的"),a("code",[e._v("ongatheringstatechange")]),e._v("：此event handler，当"),a("code",[e._v("RTCIceTransportgatheringstate")]),e._v("改变时，必须启动。")]),e._v(" "),a("p",[a("code",[e._v("EventHandler")]),e._v("类型的"),a("code",[e._v("onselectedcandidatepairchange")]),e._v("：此event handler，当"),a("code",[e._v("RTCIceTransport")]),e._v("选定的候选者对改变时，必须启动。")]),e._v(" "),a("p",[a("strong",[e._v("方法")])]),e._v(" "),a("p",[a("code",[e._v("getLocalCandidates")]),e._v(":返回一个序列，描述为"),a("code",[e._v("RTCIceTransport")]),e._v("收集并在"),a("code",[e._v("onicecandidate")]),e._v("中发送的本地候选者。")]),e._v(" "),a("p",[a("code",[e._v("getRemoteCandidates")]),e._v(":返回一个序列，描述通过"),a("code",[e._v("addIceCandidate()")]),e._v("，由"),a("code",[e._v("RTCIceTransport")]),e._v("接收的ICE候选者。")]),e._v(" "),a("blockquote",[a("p",[e._v("NOTE:"),a("code",[e._v("getRemoteCandidates")]),e._v("不会暴露peer reflexive candidates，因为它们不是通过"),a("code",[e._v("addIceCandidate()")]),e._v("接收的。")])]),e._v(" "),a("p",[a("code",[e._v("getSelectedCandidatePair")]),e._v(":返回用来发送数据包的选定候选者对。此方法必须返回[[SelectedCandidatePair]]插槽的值。")]),e._v(" "),a("p",[a("code",[e._v("getLocalParameters")]),e._v(":返回通过"),a("code",[e._v("setLocalDescription")]),e._v("由"),a("code",[e._v("RTCIceTransport")]),e._v("接收的本地ICE参数，如果参数未被接收，则为"),a("code",[e._v("null")]),e._v("。")]),e._v(" "),a("p",[a("code",[e._v("getRemoteParameters")]),e._v(":返回通过"),a("code",[e._v("setRemoteDescription")]),e._v("，由"),a("code",[e._v("RTCIceTransport")]),e._v("接收的ICE远程参数，如果参数未被接收，则为"),a("code",[e._v("null")]),e._v("。")])])}),[],!1,null,null,null);t.default=v.exports}}]);