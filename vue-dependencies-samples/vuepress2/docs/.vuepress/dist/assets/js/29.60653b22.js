(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{511:function(t,e,n){"use strict";n.r(e);var r=n(56),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"_4-2-7-rtcrtcpmuxpolicy-枚举"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-7-rtcrtcpmuxpolicy-枚举"}},[t._v("#")]),t._v(" "),n("a",{attrs:{href:"http://w3c.github.io/webrtc-pc/#rtcrtcpmuxpolicy-enum",target:"_blank",rel:"noopener noreferrer"}},[t._v("4.2.7 RTCRtcpMuxPolicy 枚举"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("如[JSEP]（第4.1.1节）中所述，RtcpMuxPolicy会影响为支持非多路复用而收集哪些ICE候选项。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('enum RTCRtcpMuxPolicy {\n  // At risk due to lack of implementers\' interest.\n  "negotiate",\n  "require"\n};\n')])])]),n("table",[n("tr",[n("td",{attrs:{colspan:"2"}},[t._v("\n    Enumeration description (non-normative)\n    ")])]),t._v(" "),n("tr",[n("td",[t._v("\n    negotiate\t\n    ")]),t._v(" "),n("td",[t._v("\n    同时收集RTP和RTCP的ICE候选项。如果远程端点能够复用RTCP，则在RTP候选地址上复用RTCP。如果不是，请分开使用RTP和RTCP候选项。请注意，如[JSEP]（第4.1.1节）中所述，用户代理可能无法实现非多路复用的RTCP，在这种情况下，它将拒绝使用协商策略创建 RTCPeerConnection 实例的尝试。\n    ")])]),t._v(" "),n("tr",[n("td",[t._v("\n    require\n    ")]),t._v(" "),n("td",[t._v("\n    只收集RTC候选地址和在RTP上复用了RTCP的候选地址。如果远程端点不支持rtcp-mux，则会话协商将失败。\n    ")])])]),t._v(" "),n("blockquote",[n("p",[t._v("FEATURE AT RISK 1")])]),t._v(" "),n("p",[t._v("支持非多路复用RTP / RTCP的本规范的各个方面被标记为存在风险的特征，因为实施者没有明确的承诺。这包括：")]),t._v(" "),n("blockquote",[n("ol",[n("li",[t._v("对于negotiate值，实施者没有明确承诺与此相关的行为。")]),t._v(" "),n("li",[t._v("支持RTCRtpSender和RTCRtpReceiver中的rtcpTransport属性。")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);