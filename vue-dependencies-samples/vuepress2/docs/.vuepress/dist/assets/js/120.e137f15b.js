(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{421:function(e,t,a){"use strict";a.r(t);var r=a(56),i=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"_8-7-强制实施物理数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-7-强制实施物理数据"}},[e._v("#")]),e._v(" 8.7 强制实施物理数据")]),e._v(" "),a("p",[e._v("[WEBRTC-STATS]中列出的统计数据被用来涵盖广泛的用例。并非所有WebRTC实现都必须实现它们。")]),e._v(" "),a("p",[e._v("当PeerConnection上存在相应的对象时，实现必须支持生成以下类型的统计信息，并使用所列的对该对象有效时的属性：")]),e._v(" "),a("ul",[a("li",[e._v("RTCRTPStreamStats，具有ssrc，kind，transportId，codecId，nackCount属性")]),e._v(" "),a("li",[e._v("RTCReceivedRTPStreamStats，包含继承的字典中的所有必需属性，还包括packetsReceived，packetsLost，jitter，packetsDiscarded属性")]),e._v(" "),a("li",[e._v("RTCInboundRTPStreamStats，包含继承的字典中的所有必需属性，还包括bytesReceived，trackId，receiverId，remoteId，framesDecoded属性")]),e._v(" "),a("li",[e._v("RTCRemoteInboundRTPStreamStats，包含继承词典的所有必需属性，以及属性localId，roundTripTime")]),e._v(" "),a("li",[e._v("RTCSentRTPStreamStats，包含继承的字典中的所有必需属性，以及属性packetsSent，bytesSent")]),e._v(" "),a("li",[e._v("RTCOutboundRTPStreamStats，包含继承词典的所有必需属性，还包括trackId，senderId，remoteId，framesEncoded属性")]),e._v(" "),a("li",[e._v("RTCRemoteOutboundRTPStreamStats，包含继承的字典中的所有必需属性，以及localId，remoteTimestamp属性")]),e._v(" "),a("li",[e._v("RTCPeerConnectionStats，具有dataChannelsOpened，dataChannelsClosed属性")]),e._v(" "),a("li",[e._v("RTCDataChannelStats，带有属性标签，协议，dataChannelIdentifier，state，messagesSent，bytesSent，messagesReceived，bytesReceived")]),e._v(" "),a("li",[e._v("RTCMediaStreamStats，具有属性streamIdentifer，trackIds")]),e._v(" "),a("li",[e._v("RTCMediaStreamTrackStats，属性detached")]),e._v(" "),a("li",[e._v("RTCMediaHandlerStats具有属性trackIdentifier，remoteSource，ended")]),e._v(" "),a("li",[e._v("带有属性audioLevel的RTCAudioHandlerStats")]),e._v(" "),a("li",[e._v("RTCVideoHandlerStats具有属性frameWidth，frameHeight，framesPerSecond")]),e._v(" "),a("li",[e._v("带有属性framesSent的RTCVideoSenderStats")]),e._v(" "),a("li",[e._v("带有属性framesReceived，framesDecoded，framesDropped，framesCorrupted的RTCVideoReceiverStats")]),e._v(" "),a("li",[e._v("RTCCodecStats，具有属性payloadType，codec，clockRate，channels，sdpFmtpLine")]),e._v(" "),a("li",[e._v("RTCTransportStats，具有bytesSent，bytesReceived，rtcpTransportStatsId，selectedCandidatePairId，localCertificateId，remoteCertificateId属性")]),e._v(" "),a("li",[e._v("RTCIceCandidatePairStats，具有属性transportId，localCandidateId，remoteCandidateId，state，priority，nominated，bytesSent，bytesReceived，totalRoundTripTime，currentRoundTripTime")]),e._v(" "),a("li",[e._v("RTCIceCandidateStats，具有属性地址，端口，协议，候选类型，URL")]),e._v(" "),a("li",[e._v("RTCCertificateStats，具有属性fingerprint，fingerprintAlgorithm，base64Certificate，issuerCertificateId")])]),e._v(" "),a("p",[e._v("实现可以支持生成[WEBRTC-STATS]中定义的任何其他统计信息，并且可以生成未记录的统计信息。")])])}),[],!1,null,null,null);t.default=i.exports}}]);