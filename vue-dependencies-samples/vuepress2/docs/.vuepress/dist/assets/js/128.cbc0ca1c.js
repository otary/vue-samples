(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{412:function(t,e,r){"use strict";r.r(e);var a=r(56),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"翻译校对流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#翻译校对流程"}},[t._v("#")]),t._v(" 翻译校对流程")]),t._v(" "),r("h2",{attrs:{id:"翻译流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#翻译流程"}},[t._v("#")]),t._v(" 翻译流程")]),t._v(" "),r("p",[t._v("已经通过 Python 脚本完成文档翻译，官方会按照小章节添加至此，并建立 issue。校对者，在 issue 中认领任务即可。")]),t._v(" "),r("h2",{attrs:{id:"校对流程梳理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#校对流程梳理"}},[t._v("#")]),t._v(" 校对流程梳理")]),t._v(" "),r("p",[r("img",{attrs:{src:"/image/proofread.png",alt:"流程"}})]),t._v(" "),r("ol",[r("li",[t._v("领取流程：issue 作为文章池。")]),t._v(" "),r("li",[t._v("临时分支定义：仅仅用来对 master 分支发起 PR，在整个流程结束后（Merge 进 master 分支）将临时分支删除。")]),t._v(" "),r("li",[t._v("校对完成后，对 repo 增加文件，发起 PR。")]),t._v(" "),r("li",[t._v("确认校对完成：项目发起者 Merge。")])]),t._v(" "),r("h2",{attrs:{id:"如何发起-pull-request-不熟悉-github-的同学请阅读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何发起-pull-request-不熟悉-github-的同学请阅读"}},[t._v("#")]),t._v(" 如何发起 Pull Request（不熟悉 Github 的同学请阅读）")]),t._v(" "),r("h3",{attrs:{id:"fork-工作流的好处"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fork-工作流的好处"}},[t._v("#")]),t._v(" Fork 工作流的好处")]),t._v(" "),r("p",[t._v("Fork 工作流与上述流程不一样，大家操作的并不是本代码仓库。每个人都有一个属于自己的仓库，可以进行任意修改并且对本仓库不会造成影响。Fork 工作流的主要优点在于贡献可以轻易地整合进项目，而不需要每个人都推送到单一的中央仓库。开发者推送到他们自己的服务端仓库，只有项目管理者可以推送到官方仓库。这使得管理者可以接受任何开发者的提交，却不需要给他们中央仓库的权限。")]),t._v(" "),r("h3",{attrs:{id:"pull-request-操作说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pull-request-操作说明"}},[t._v("#")]),t._v(" Pull Request 操作说明")]),t._v(" "),r("ol",[r("li",[t._v("Fork 该仓库到自己的 GitHub 账号。得到一个自己的私有仓库可以任意修改并不会影响本仓库。")]),t._v(" "),r("li",[t._v("Clone 自己的的仓库到本地。")]),t._v(" "),r("li",[t._v("添加仓库为另一个远程实现与之的同步。")]),t._v(" "),r("li",[t._v("在本地仓库新建分支完成自己的文章翻译并提交到自己的仓库。")]),t._v(" "),r("li",[t._v("在自己的仓库中点击 "),r("em",[t._v("New pull request")]),t._v(" 给仓库发 PR。")]),t._v(" "),r("li",[t._v("如果需要根据校对意见进行修改，则修改后再走一遍上述 Commit -> PR 就行了。")]),t._v(" "),r("li",[t._v("因为翻译是个协作流程，所以需要定期同步本仓库的更改，此时依次运行："),r("em",[t._v("git fetch upstream")]),t._v("、"),r("em",[t._v("git checkout master")]),t._v(" 、"),r("em",[t._v("git merge upstream/master")]),t._v(" 即可。最好是在自己准备翻译之前同步一次。")])]),t._v(" "),r("h2",{attrs:{id:"q-a"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[t._v("#")]),t._v(" Q & A")]),t._v(" "),r("h3",{attrs:{id:"q-会不会带来和代码-merge-同样的问题-多分支-merge-造成的冲突"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-会不会带来和代码-merge-同样的问题-多分支-merge-造成的冲突"}},[t._v("#")]),t._v(" Q：会不会带来和代码 merge 同样的问题，多分支 merge 造成的冲突？")]),t._v(" "),r("p",[t._v("A：不会。因为翻译流程 PR 只对 master 仓库进行 Add 文件操作，所以不会带来多人同时修改一个文件的情况。")]),t._v(" "),r("hr"),t._v(" "),r("p",[t._v("注：本规则在实际操作过程中，如遇到问题，请在"),r("a",{attrs:{href:"https://rtcdeveloper.com",target:"_blank",rel:"noopener noreferrer"}},[t._v(" RTC 开发者社区"),r("OutboundLink")],1),t._v("发帖提出，我们会再逐步优化。")])])}),[],!1,null,null,null);e.default=s.exports}}]);