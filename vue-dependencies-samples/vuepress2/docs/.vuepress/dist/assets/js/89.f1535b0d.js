(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{451:function(t,e,s){"use strict";s.r(e);var a=s(56),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_5-5-rtcdtlstransport接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-rtcdtlstransport接口"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"http://w3c.github.io/webrtc-pc/#rtcdtlstransport-interface",target:"_blank",rel:"noopener noreferrer"}},[t._v("5.5 RTCDtlsTransport接口"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("RTCDtlsTransport")]),t._v("接口允许应用程序获取数据报传输层安全性协议(DTLS)传输的信息，通过此协议，RTP与RTCP数据包被"),s("code",[t._v("RTCRtpSender")]),t._v("和"),s("code",[t._v("RTCRtpReceiver")]),t._v("对象发送和接收，还有数据通道发送和接收的其它数据，例如STCP数据包。特别是DTLS为底层传输添加了安全性，并且"),s("code",[t._v("RTCDtlsTransport")]),t._v("接口允许获取底层传输和安全性的信息。因为需要调用"),s("code",[t._v("setLocalDescription()")]),t._v("和"),s("code",[t._v("setRemoteDescription()")]),t._v("函数，"),s("code",[t._v("RTCDtlsTransport")]),t._v("对象被创建。每个"),s("code",[t._v("RTCDtlsTransport")]),t._v("对象代表一个特定的"),s("code",[t._v("RTCRtpTransceiver")]),t._v("的RTP或RTCP组件的DTLS传输层，或是一组已经通过BUNDLE协商好的"),s("code",[t._v("RTCRtpTransceivers")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("NOTE:现存RTCRtpTransceiver的一个新DTLS关联将会由一个现存RTCDtlsTransport对象代表，它的状态将会对应更新，而不是换做一个新的对象来表示。")])]),t._v(" "),s("p",[t._v("一个"),s("code",[t._v("RTCDtlsTransport")]),t._v("有一个被初始化为"),s("code",[t._v("new")]),t._v("的[[DtlsTransportState]]内部插槽，和一个被初始化为空列表的[[RemoteCertificates]]的插槽。")]),t._v(" "),s("p",[t._v("当底层DTLS传输产生错误时，例如证书失效，或错误警报，用户代理必须对运行下列步骤的任务排序：")]),t._v(" "),s("ol",[s("li",[t._v("让transport成为"),s("code",[t._v("RTCDtlsTransport")]),t._v("对象，用来接收状态更新和错误提示。")]),t._v(" "),s("li",[t._v("如果transport的状态已经为failed，中断这些步骤。")]),t._v(" "),s("li",[t._v("设置transport的[[DtlsTransportState]]插槽为"),s("code",[t._v("failed")]),t._v("。")]),t._v(" "),s("li",[t._v("使用RTCErrorEvent接口和它的或者为dtlsfailure，或者为fingerprint-failure的errorDetail属性，发起一个名为error的事件，并且其它fields都按照RTCErrorDetailType枚举的那样恰当设置，在transport。")]),t._v(" "),s("li",[t._v("在transport发起一个名为statechange的事件。")])]),t._v(" "),s("p",[t._v("当底层DTLS传输由于任何其它原因需要更新相应RTCDtlsTransport对象的状态时，用户代理必须对运行下列步骤的任务排序：")]),t._v(" "),s("ol",[s("li",[t._v("让transport成为RTCDtlsTransport对象来接收状态更新。")]),t._v(" "),s("li",[t._v("让newState成为新状态。")]),t._v(" "),s("li",[t._v("设置transport的[[DtlsTransportState]]插槽为newState。")]),t._v(" "),s("li",[t._v("如果newState连接，那么让newRemoteCertificates成为远端使用的证书链，每个证书都使用二进制可辨别编码规则(DER)[X690]进行编码，饼设置transport的[[RemoteCertificates]]插槽为newRemoteCertificates。")]),t._v(" "),s("li",[t._v("在transport发起一个名为statechange的事件。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exposed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RTCDtlsTransport")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventTarget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SameObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    readonly        attribute "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RTCIceTransport")]),t._v("       iceTransport"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    readonly        attribute "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RTCDtlsTransportState")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sequence"),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" getRemoteCertificates "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    attribute "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventHandler")]),t._v("          onstatechange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    attribute "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventHandler")]),t._v("          onerror"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("属性")])]),t._v(" "),s("p",[s("code",[t._v("iceTransport")]),t._v(" of type "),s("code",[t._v("RTCIceTransport")]),t._v(", readonly:\niceTransport属性是用来发送接收数据包的底层传输。底层传输在多个活跃的RTCDtlsTransport对象间可能不会被共享。")]),t._v(" "),s("p",[s("code",[t._v("state")]),t._v(" of type "),s("code",[t._v("RTCDtlsTransportState")]),t._v(", readonly:\n当需要state属性时，它必须返回[[DtlsTransportState]]插槽的值。")]),t._v(" "),s("p",[s("code",[t._v("onstatechange")]),t._v(" of type "),s("code",[t._v("EventHandler")]),t._v(":\n此eventhandler的事件类型是statechange。")]),t._v(" "),s("p",[s("code",[t._v("onerror")]),t._v(" of type "),s("code",[t._v("EventHandler")]),t._v(":\n此eventhandler的事件类型是error。")]),t._v(" "),s("p",[s("strong",[t._v("方法")])]),t._v(" "),s("p",[s("code",[t._v("getRemoteCertificates")]),t._v("返回[[RemoteCertificates]]的值。")]),t._v(" "),s("p",[s("code",[t._v("RTCDtlsTransportState")]),t._v(" 枚举")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RTCDtlsTransportState")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"connecting"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"connected"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"closed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"failed"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("枚举描述")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("new")])]),t._v(" "),s("td",[t._v("DTLS还没有开始协商。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("connecing")])]),t._v(" "),s("td",[t._v("DTLS正在协商一个安全连接，并验证远端指纹。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("connected")]),s("a",{attrs:{href:"https://github.com/web-platform-tests/wpt/blob/master/webrtc/RTCDtlsTransport-state.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("测试：1"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("DTLS已经完成安全连接的协商，并已经确认远端指纹。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("closed")]),s("a",{attrs:{href:"https://github.com/web-platform-tests/wpt/blob/master/webrtc/RTCDtlsTransport-state.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("测试：1"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("transport已经关闭，由于收到close_notify警报，或调用close()。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("failed")])]),t._v(" "),s("td",[t._v("由于产生了错误，transport已经失败(例如接收到错误警报或未能验证远端指纹)。")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);