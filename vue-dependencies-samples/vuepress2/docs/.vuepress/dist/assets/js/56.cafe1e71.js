(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{479:function(e,t,d){"use strict";d.r(t);var a=d(56),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,d=e._self._c||t;return d("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[d("h2",{attrs:{id:"_4-8-连接建立接口"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-连接建立接口"}},[e._v("#")]),e._v(" "),d("a",{attrs:{href:"http://w3c.github.io/webrtc-pc/#interfaces-for-connectivity-establishment",target:"_blank",rel:"noopener noreferrer"}},[e._v("4.8 连接建立接口"),d("OutboundLink")],1)]),e._v(" "),d("h3",{attrs:{id:"_4-8-1-rtcicecandidate接口"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-1-rtcicecandidate接口"}},[e._v("#")]),e._v(" 4.8.1 RTCIceCandidate接口")]),e._v(" "),d("p",[e._v("该接口描述了ICE候选人，在[ICE]第2节中描述。除了"),d("code",[e._v("candidate")]),e._v("，"),d("code",[e._v("sdpMid")]),e._v("，"),d("code",[e._v("sdpMLineIndex")]),e._v("和"),d("code",[e._v("usernameFragment")]),e._v("之外，其余属性解析来自于"),d("code",[e._v("candidateInitDict")]),e._v("中的"),d("code",[e._v("candidate")]),e._v("成员，如果它是格式良好的。")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",{pre:!0,attrs:{class:"language-text"}},[d("code",[e._v("[Constructor(optional RTCIceCandidateInit candidateInitDict),\n Exposed=Window]\ninterface RTCIceCandidate {\n    readonly attribute DOMString               candidate;\n    readonly attribute DOMString?              sdpMid;\n    readonly attribute unsigned short?         sdpMLineIndex;\n    readonly attribute DOMString?              foundation;\n    readonly attribute RTCIceComponent?        component;\n    readonly attribute unsigned long?          priority;\n    readonly attribute DOMString?              address;\n    readonly attribute RTCIceProtocol?         protocol;\n    readonly attribute unsigned short?         port;\n    readonly attribute RTCIceCandidateType?    type;\n    readonly attribute RTCIceTcpCandidateType? tcpType;\n    readonly attribute DOMString?              relatedAddress;\n    readonly attribute unsigned short?         relatedPort;\n    readonly attribute DOMString?              usernameFragment;\n    RTCIceCandidateInit toJSON();\n};\n")])])]),d("p",[d("strong",[e._v("构造函数")])]),e._v(" "),d("p",[d("code",[e._v("RTCIceCandidate")]),e._v("接口")]),e._v(" "),d("p",[e._v("RTCIceCandidate() 构造函数接受一个字典参数candidateInitDict，该参数用于初始化新的RTCIceCandidate对象。")]),e._v(" "),d("p",[e._v("调用时，请执行以下步骤：")]),e._v(" "),d("ol",[d("li",[d("p",[e._v("如果 "),d("code",[e._v("candidateInitDict")]),e._v(" 中的 "),d("code",[e._v("sdpMid")]),e._v(" 和 "),d("code",[e._v("sdpMLineIndex")]),e._v(" 字典成员都为 "),d("code",[e._v("null")]),e._v("，则抛出 TypeError 。")])]),e._v(" "),d("li",[d("p",[e._v("让 "),d("code",[e._v("iceCandidate")]),e._v(" 成为新创建的"),d("code",[e._v("RTCIceCandidate")]),e._v(" 对象。")])]),e._v(" "),d("li",[d("p",[e._v("将 "),d("code",[e._v("iceCandidate")]),e._v(" 的以下属性初始化为"),d("code",[e._v("null")]),e._v(": "),d("code",[e._v("foundation")]),e._v(", "),d("code",[e._v("component")]),e._v(", "),d("code",[e._v("priority")]),e._v(", "),d("code",[e._v("address")]),e._v(", "),d("code",[e._v("protocol")]),e._v(", "),d("code",[e._v("port")]),e._v(", "),d("code",[e._v("type")]),e._v(", "),d("code",[e._v("tcpType")]),e._v(", "),d("code",[e._v("relatedAddress和relatedPort")]),e._v("。")])]),e._v(" "),d("li",[d("p",[e._v("Set the candidate, sdpMid, sdpMLineIndex, usernameFragment attributes of iceCandidate with the corresponding dictionary member values of candidateInitDict.\nzh:使用candidateInitDict的相应字典成员值设置iceCandidate的候选者，sdpMid，sdpMLineIndex，usernameFragment属性。")])]),e._v(" "),d("li",[d("p",[e._v("将候选人设置为 "),d("code",[e._v("candidateInitDict")]),e._v("的"),d("code",[e._v("candidate")]),e._v("成员。如果设置的候选者不是空字符串，请运行以下步骤：")]),e._v(" "),d("ol",[d("li",[d("p",[e._v("使用候选属性语法解析候选者。")])]),e._v(" "),d("li",[d("p",[e._v("如果候选属性语法解析失败，则中止这些步骤。")])]),e._v(" "),d("li",[d("p",[e._v("如果解析结果中的任何字段表示iceCandidate中相应属性的无效值，则中止这些步骤。")])]),e._v(" "),d("li",[d("p",[e._v("将 "),d("code",[e._v("iceCandidate")]),e._v(" 中的相应属性设置为已解析结果的字段值。")])])])]),e._v(" "),d("li",[d("p",[e._v("返回"),d("code",[e._v("iceCandidate")]),e._v("。")])])]),e._v(" "),d("p",[e._v("NOTE："),d("code",[e._v("RTCIceCandidate")]),e._v("的构造函数仅对 "),d("code",[e._v("candidateInitDict")]),e._v(" 中的字典成员进行基本解析和类型检查。在将RTCIceCandidate对象传递给 addIceCandidate() 时，会完成 "),d("code",[e._v("candidate")]),e._v(", "),d("code",[e._v("sdpMid")]),e._v(", "),d("code",[e._v("sdpMLineIndex")]),e._v(", "),d("code",[e._v("usernameFragment")]),e._v(" 以及相应会话描述的良构性的详细验证。")]),e._v(" "),d("p",[e._v("属性")]),e._v(" "),d("p",[e._v("以下大多数属性在[ICE]的第15.1节中定义。")]),e._v(" "),d("p",[d("code",[e._v("candidate")]),e._v(" 的类型为 "),d("code",[e._v("DOMString")]),e._v(" 只读项")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("`candidate-attribute`在[ICE]第15.1节中有详细说明。如果此`RTCIceCandidate表示候选者结束指示，则候选者是空字符串。\n")])])]),d("p",[d("code",[e._v("sdpMid")]),e._v(" 的类型为 "),d("code",[e._v("DOMString")]),e._v(" 只读项，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("如果不为`null`，则其包含[RFC5888]中定义的媒体流“标识标签”，用于与该候选者相关联的媒体组件。\n")])])]),d("p",[d("code",[e._v("sdpMLineIndex")]),e._v(" 的类型为 "),d("code",[e._v("unsigned short")]),e._v(" 只读项，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v(" 如果不为空，则这指示该候选与之关联的SDP中的媒体描述的索引（从零开始）。\n")])])]),d("p",[d("code",[e._v("foundation")]),e._v(" 的类型为 "),d("code",[e._v("DOMString")]),e._v(" 只读项，可为空\nzh:DOMString类型的基础，只读，可空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("一个唯一标识符，允许ICE关联出现在多个 RTCIceTransports 上的候选项。\n")])])]),d("p",[d("code",[e._v("component")]),e._v("的类型为 "),d("code",[e._v("RTCIceComponent")]),e._v(" 只读，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("候选人指定的网络组件（rtp或rtcp）。这对应于 `candidate-attribute` 中的 `component-id` 字段，解码为 `RTCIceComponent` 中定义的字符串表示。\n")])])]),d("p",[d("code",[e._v("priority")]),e._v("的类型为 "),d("code",[e._v("unsigned long")]),e._v(" 只读，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("候选人指定的优先顺序。\n")])])]),d("p",[d("code",[e._v("address")]),e._v("的类型为 "),d("code",[e._v("DOMString")]),e._v(" 只读，可为空")]),e._v(" "),d("p",[e._v("候选的地址，允许IPv4地址，IPv6地址和完全限定的域名（FQDN）。这对应于候选属性中的连接地址字段。")]),e._v(" "),d("blockquote",[d("p",[e._v("NOTE：通过ICE收集并在RTCIceCandidate实例中对应用程序进行访问的候选者中公开的地址可以揭示有关设备和用户的更多信息（例如，位置，本地网络拓扑），而不是用户在非WebRTC启用的浏览器中可能预期的信息。")]),e._v(" "),d("p",[e._v("这些地址始终暴露给应用程序，并且可能暴露给通信方，并且可以在没有任何特定用户同意的情况下暴露（例如，用于与数据信道一起使用的对等连接，或仅用于接收媒体）。")]),e._v(" "),d("p",[e._v("这些地址也可以用作临时或持久的跨源状态，因此有助于设备的指纹表面。")]),e._v(" "),d("p",[e._v("应用程序可以通过强制ICE代理仅通过RTCConfiguration的iceTransportPolicy成员报告中继候选者来避免暂时或永久地向通信方公开地址。")])]),e._v(" "),d("blockquote",[d("p",[e._v("为了限制暴露给应用程序本身的地址，浏览器可以为其用户提供有关共享本地地址的不同策略，如[RTCWEB-IP-HANDLING]中所定义。")])]),e._v(" "),d("p",[d("code",[e._v("protocol")]),e._v(" 的类型为 "),d("code",[e._v("RTCIceProtocol")]),e._v("，只读项，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("候选协议可以为udp和tcp。对应于候选属性中的传输字段。\n")])])]),d("p",[d("code",[e._v("port")]),e._v("的类型为 "),d("code",[e._v("unsigned short")]),e._v("，只读项，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("候选人的端口。\n")])])]),d("p",[d("code",[e._v("type")]),e._v("的类型为 "),d("code",[e._v("RTCIceCandidateType")]),e._v("，只读项，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("候选人的类型。对应于候选属性中的传输字段。\n")])])]),d("p",[d("code",[e._v("tcpType")]),e._v("的类型为 "),d("code",[e._v("RTCIceTcpCandidateType")]),e._v(" ，只读项，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("如果 protocol 是 tcp ，则 tcpType 表示 TCP 候选的类型。否则，tcpType为null。这对应于candidate-attribute中的tcp-type字段。\n")])])]),d("p",[d("code",[e._v("relatedAddress")]),e._v(" 的类型为"),d("code",[e._v("DOMString")]),e._v("，只读项，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("对于从另一个派生的候选者（例如中继或自反候选者），relatedAddress是从其派生的候选者的IP地址。对于主机候选者，relatedAddress为空。这对应于 candidate-attribute 中的 rel-address 字段。\n")])])]),d("p",[d("code",[e._v("relatedPort")]),e._v("的类型为"),d("code",[e._v("unsigned short")]),e._v("，只读项，可为空")]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",[d("code",[e._v("对于从另一个派生的候选者（例如中继或反身候选者），`relatedPort` 是从其派生的候选者的端口。对于候选主机， `relatedPort` 为空。这对应于candidate-attribute中的rel-port字段。\n")])])]),d("p",[d("code",[e._v("usernameFragment")]),e._v(" 的类型为"),d("code",[e._v("DOMString")]),e._v("，只读项，可为空\n详细描述参照[ICE]第15.4节中定义的ufrag。")]),e._v(" "),d("p",[d("strong",[e._v("方法")])]),e._v(" "),d("p",[d("code",[e._v("toJSON()")]),e._v("\ntoJSON()")]),e._v(" "),d("ol",[d("li",[d("p",[e._v("把json成为一个新的RTCIceCandidateInit字典。")])]),e._v(" "),d("li",[d("p",[e._v("要调用RTCIceCandidate接口的toJSON()操作，请运行以下步骤：让json成为新的RTCIceCandidateInit字典。对于«“候选者”，“sdpMid”，“sdpMLineIndex”，“usernameFragment”中的每个属性标识符attr»:")]),e._v(" "),d("ol",[d("li",[d("p",[e._v("在给定此RTCIceCandidate对象的情况下，将value设置为获取由attr标识的属性的基础值的结果。")])]),e._v(" "),d("li",[d("p",[e._v("将json [attr]设置为value。")])])])]),e._v(" "),d("li",[d("p",[e._v("返回json。")])])]),e._v(" "),d("div",{staticClass:"language- extra-class"},[d("pre",{pre:!0,attrs:{class:"language-text"}},[d("code",[e._v('dictionary RTCIceCandidateInit {\n    DOMString       candidate = "";\n    DOMString?      sdpMid = null;\n    unsigned short? sdpMLineIndex = null;\n    DOMString       usernameFragment;\n};\n')])])]),d("p",[d("strong",[e._v("字典RTCIceCandidateInit成员")])]),e._v(" "),d("p",[d("code",[e._v("candidate")]),e._v(' of type DOMString, defaulting to "":\n详细描述参照[ICE]第15.1节中定义的候选属性。如果这表示'),d("code",[e._v("candidate")]),e._v("结束指示，则"),d("code",[e._v("candidate")]),e._v("是空字符串。")]),e._v(" "),d("p",[d("code",[e._v("sdpMid")]),e._v(" 的类型为 "),d("code",[e._v("DOMString")]),e._v(", 可为空，默认为null\n如果不为空，则其包含[RFC5888]中定义的媒体流“标识标签”，用于与该"),d("code",[e._v("candidate")]),e._v("相关联的媒体组件。")]),e._v(" "),d("p",[d("code",[e._v("sdpMLineIndex")]),e._v(" 的类型为 "),d("code",[e._v("unsigned short")]),e._v(", 可为空，默认为空\n如果不为空，则这指示该候选与之关联的SDP中的媒体描述的索引（从零开始）。")]),e._v(" "),d("p",[d("code",[e._v("usernameFragment")]),e._v(" 的类型为 "),d("code",[e._v("DOMString")]),e._v(" 只读，可为空\n详细描述参照[ICE]第15.4节中有"),d("code",[e._v("ufrag")]),e._v("的定义。")])])}),[],!1,null,null,null);t.default=n.exports}}]);