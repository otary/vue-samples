(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{430:function(e,v,_){"use strict";_.r(v);var n=_(56),t=Object(n.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"_7-3-caninsertdtmf算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-caninsertdtmf算法"}},[e._v("#")]),e._v(" 7.3 canInsertDTMF算法")]),e._v(" "),_("p",[e._v("为了确定是否可以为RTCDTMFSender实例dtmfSender发送DTMF,用户代理必须对运行以下步骤的任务排队：")]),e._v(" "),_("ol",[_("li",[e._v("让sender成为与dtmfSender关联的"),_("code",[e._v("RTCRtpSender")]),e._v("。")]),e._v(" "),_("li",[e._v("让收发器成为与sender关联的"),_("code",[e._v("RTCRtpTransceiver")]),e._v("。")]),e._v(" "),_("li",[e._v("让connection成为与收发器关联的"),_("code",[e._v("RTCPeerConnection")]),e._v("。")]),e._v(" "),_("li",[e._v("如果connection的"),_("code",[e._v("RTCPeerConnectionState")]),e._v("不为"),_("code",[e._v("connected")]),e._v("，返回"),_("code",[e._v("false")]),e._v("。")]),e._v(" "),_("li",[e._v("如果sender的[SenderTrack]为"),_("code",[e._v("null")]),e._v("，返回"),_("code",[e._v("false")]),e._v("。")]),e._v(" "),_("li",[e._v("如果收发器的[CurrentDirection]既不是"),_("code",[e._v("sendrecv")]),e._v("也不是"),_("code",[e._v("sendonly")]),e._v(",返回"),_("code",[e._v("false")]),e._v("。")]),e._v(" "),_("li",[e._v("如果发送者的[[SendEncodings]] "),_("code",[e._v("[0] .active")]),e._v("为"),_("code",[e._v("false")]),e._v("，则返回"),_("code",[e._v("false")]),e._v("。")]),e._v(" "),_("li",[e._v("如果没有协商mimetype“audio / telephone-event”的编解码器与此发件人一起发送，则返回"),_("code",[e._v("false")]),e._v("。")]),e._v(" "),_("li",[e._v("否则，返回"),_("code",[e._v("true")]),e._v("。")])])])}),[],!1,null,null,null);v.default=t.exports}}]);