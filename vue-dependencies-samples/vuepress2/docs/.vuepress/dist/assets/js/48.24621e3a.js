(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{487:function(e,t,n){"use strict";n.r(t);var r=n(56),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"_4-4-4-垃圾回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-4-垃圾回收"}},[e._v("#")]),e._v(" "),n("a",{attrs:{href:"http://w3c.github.io/webrtc-pc/#garbage-collection",target:"_blank",rel:"noopener noreferrer"}},[e._v("4.4.4 垃圾回收"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("只要有任何可能在对象上触发事件处理器的事件存在，RTCPeerConnection对象就不能被垃圾回收。当对象的[[IsClosed]]内部插槽为true时，就没有事件处理器可以被触发了，因此可以安全地执行垃圾回收。")]),e._v(" "),n("p",[e._v("连接到RTCPeerConnection的所有RTCDataChannel和MediaStreamTrack对象都具有对RTCPeerConnection对象的强引用。")])])}),[],!1,null,null,null);t.default=a.exports}}]);