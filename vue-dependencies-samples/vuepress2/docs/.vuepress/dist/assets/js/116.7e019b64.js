(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{426:function(t,s,a){"use strict";a.r(s);var e=a(56),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_8-3-rtcstatsreport对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-rtcstatsreport对象"}},[t._v("#")]),t._v(" 8.3 "),a("code",[t._v("RTCStatsReport")]),t._v("对象")]),t._v(" "),a("p",[t._v("getStats（）方法以"),a("code",[t._v("RTCStatsReport")]),t._v("对象的形式传达成功的结果。 "),a("code",[t._v("RTCStatsReport")]),t._v("对象是标识被检查对象（"),a("code",[t._v("RTCStats")]),t._v("实例中的"),a("code",[t._v("id")]),t._v("属性）的字符串之间的映射，以及它们对应的"),a("code",[t._v("RTCStats")]),t._v("派生的字典。")]),t._v(" "),a("p",[a("code",[t._v("RTCStatsReport")]),t._v("可以由几个"),a("code",[t._v("RTCStats")]),t._v("派生的字典组成，每个字典报告实现认为与选择器相关的一个底层对象的统计信息。通过对某种类型的所有统计量求和，可以实现选择器的总和;例如，如果"),a("code",[t._v("RTCRtpSender")]),t._v("使用多个SSRC通过网络传输其轨迹，则每个SSRC中"),a("code",[t._v("RTCStatsReport")]),t._v("可以包含一个"),a("code",[t._v("RTCStats")]),t._v("派生的字典（可以通过“ssrc” stats属性的值来区分）。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exposed")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RTCStatsReport")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    readonly maplike"),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DOMString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这个接口有“entries”，“forEach”，“get”，“has”，“keys”，“values”，@@ iterator方法和"),a("code",[t._v("readonly maplike")]),t._v("带来的“size”getter。")]),t._v(" "),a("p",[t._v("使用这些来检索此统计报告由"),a("code",[t._v("RTCStats")]),t._v("组成的各种词典。支持的属性名称[WEBIDL-1]的集合被定义为为此统计信息报告生成的所有"),a("code",[t._v("RTCStats")]),t._v("派生词典的ID。")])])}),[],!1,null,null,null);s.default=n.exports}}]);